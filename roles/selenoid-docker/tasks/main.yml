---
- name: Install required system packages
  become: yes
  become_user: root
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: latest
    update_cache: true

- name: Install required packages
  become: yes
  become_user: root
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - python3-pip
    - docker.io
  ignore_errors: yes

- name: Selenoid | Install python modules for Docker
  pip:
    name: "{{ item.name }}"
  with_items:
    - { name: docker }

- name: Selenoid | Check if Docker is running and get container ID for selenoid and cm
  become: yes
  become_user: root
  command: docker ps -aq --filter "name=selenoid" --filter "name=cm"
  register: selenoid_container_id
  ignore_errors: yes

- name: Selenoid | Remove selenoid container if it exists
  become: yes
  become_user: root
  shell: 'docker stop {{ item }} && docker rm -fv {{ item }}'
  with_items: "{{ selenoid_container_id.stdout_lines | default([]) }}"
  when: selenoid_container_id.stdout_lines | default([]) | length > 0

- name: "Create docker network"
  become: yes
  become_user: root
  ansible.builtin.docker_network:
    name: "selenoid_network"
    driver: bridge  

- name: Selenoid | Run CM container, download browser images, and run selenoid
  become: yes
  become_user: root
  docker_container:
    name: cm
    image: "aerokube/cm:{{ selenoid_cm_version }}"
    networks:
      - name: selenoid_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ selenoid_config_dir }}:/root"
    env:
      OVERRIDE_HOME: "{{ selenoid_config_dir }}"
      DOCKER_API_VERSION: "{{ selenoid_docker_api_version }}"
    command: >
      selenoid start
        --version {{ selenoid_version }}
        --tmpfs {{ selenoid_tmpfs }}
        --env DOCKER_API_VERSION={{ selenoid_docker_api_version }}
        --browsers {% for browser in selenoid_browsers -%}{{ browser }}{%- if not loop.last -%},{%- endif -%}{%- endfor %}
        --last-versions {{ selenoid_browsers_last_versions }}
        --force
        --vnc
        --args "-limit {{ selenoid_limit }} -listen :{{ selenoid_listen_port }} -timeout {{ selenoid_timeout }} -disable-queue"
    state: started 

- name: Selenoid UI | Run Selenoid UI container
  become: yes
  become_user: root
  docker_container:
    name: selenoid-ui
    image: "aerokube/selenoid-ui:{{ selenoid_ui_version }}"
    networks:
      - name: selenoid_network
    links:
      - selenoid
    ports:
      - "8080:8080"
    command: ["--selenoid-uri", "http://selenoid:4444"]
    state: started
      